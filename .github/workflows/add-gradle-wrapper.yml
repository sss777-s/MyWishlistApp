name: Generate & Commit Gradle Wrapper

on:
  workflow_dispatch:
  push:
    branches: []

permissions:
  contents: write

env:
  GRADLE_VERSION: "8.5.1"
  GIT_COMMIT_NAME: "github-actions[bot]"
  GIT_COMMIT_EMAIL: "actions@github.com"

jobs:
  generate-wrapper:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Download and unpack Gradle distribution
        run: |
          set -euo pipefail
          V="${{ env.GRADLE_VERSION }}"
          WORKDIR="$(pwd)/.gradle-dist"
          mkdir -p "${WORKDIR}"
          cd "${WORKDIR}"
          ZIPNAME="gradle-${V}-bin.zip"
          if [ ! -f "${ZIPNAME}" ]; then
            curl -fsSL -o "${ZIPNAME}" "https://services.gradle.org/distributions/${ZIPNAME}"
          fi
          unzip -q -o "${ZIPNAME}"
          chmod +x "gradle-${V}/bin/gradle" || true

      - name: Run gradle wrapper to generate wrapper files
        run: |
          set -euo pipefail
          V="${{ env.GRADLE_VERSION }}"
          GD="${{ github.workspace }}/.gradle-dist/gradle-${V}"
          "${GD}/bin/gradle" wrapper --gradle-version "${V}" --distribution-type all || true
          if [ -f "./gradlew" ]; then chmod +x ./gradlew || true; fi
          ls -la gradle || true
          ls -la gradle/wrapper || true

      - name: Commit generated wrapper back to repo (best-effort)
        env:
          GIT_COMMIT_NAME: ${{ env.GIT_COMMIT_NAME }}
          GIT_COMMIT_EMAIL: ${{ env.GIT_COMMIT_EMAIL }}
        run: |
          set -euo pipefail
          git add -A gradlew gradlew.bat gradle/wrapper || true
          git config user.name "${GIT_COMMIT_NAME}" || true
          git config user.email "${GIT_COMMIT_EMAIL}" || true
          if git diff --cached --quiet; then
            echo "No wrapper files to commit"
          else
            git commit -m "chore(ci): add generated gradle wrapper" || true
            git push origin HEAD:main || true
          fi

      - name: Final listing
        run: |
          echo "=== repo top ==="
          ls -la
          echo "=== gradle/wrapper ==="
          ls -la gradle/wrapper || true
        chore: add wrapper generator
