name: Build Debug APK
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  setup-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for ZIP presence
        id: zip-check
        run: |
          if [ -f "./MyTapSaver.zip" ]; then
            echo "zip_found=true" > zipfound.txt
          else
            echo "zip_found=false" > zipfound.txt
          fi

      - name: If ZIP present unzip it
        if: ${{ steps.zip-check.outputs.zip_found == 'true' || steps.zip-check.outcome == 'success' }}
        run: |
          if [ -f "./MyTapSaver.zip" ]; then
            unzip -o MyTapSaver.zip -d extracted || true
            if [ -d "./extracted/MyTapSaver" ]; then
              rsync -a ./extracted/MyTapSaver/ ./ || true
            else
              rsync -a ./extracted/ ./ || true
            fi
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Grant execute permission for gradlew (if exists)
        run: |
          if [ -f "./gradlew" ]; then
            chmod +x ./gradlew
          fi

      - name: Build debug APK (try gradlew then gradle)
        run: |
          if [ -f "./gradlew" ]; then
            ./gradlew assembleDebug --no-daemon
          else
            echo "gradlew not found; trying system gradle (may fail if Android SDK not set)"
            sudo apt-get update -y
            sudo apt-get install -y gradle
            gradle assembleDebug --no-daemon || true
          fi

      - name: Upload APK artifact (if exists)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
