name: Build Debug APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install CLI tools (wget, unzip)
        run: sudo apt-get update && sudo apt-get install -y wget unzip

      - name: Install Android commandline-tools and SDK packages
        run: |
          mkdir -p $ANDROID_SDK_ROOT
          cd $ANDROID_SDK_ROOT
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline.zip
          unzip -q cmdline.zip -d cmdline-tools
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest
          mv cmdline-tools/* $ANDROID_SDK_ROOT/cmdline-tools/latest/
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} "platform-tools" "platforms;android-33" "build-tools;33.0.2"
        shell: bash

      - name: Ensure gradlew is executable
        run: |
          if [ -f ./gradlew ]; then
            chmod +x ./gradlew
          else
            echo "gradlew not found â€” ensure wrapper is in repository."
            exit 1
          fi

      - name: Build debug APK
        run: ./gradlew assembleDebug --no-daemon
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}

      - name: Upload APK artifact (if exists)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/**/debug/*.apk
